"""
This script will extract all projects on the MicroStrategy server, retrieve all types of tables for each project, and export the details to an Excel file.
"""

import pandas as pd
import warnings
from mstrio.connection import Connection
from mstrio.project_objects import Project
from mstrio.datasources.datasource_instance import list_connected_datasource_instances
from mstrio.modeling.schema.helpers import PhysicalTableType
from mstrio.modeling.schema.table import (
    list_logical_tables,
    list_physical_tables,
    list_tables_prefixes,
    list_warehouse_tables,
)

# Disable all warnings
warnings.filterwarnings("ignore")

# Connect to MicroStrategy server with SSL verification disabled
base_url = "your_base_url"  # e.g., "https://your-mstr-server.com/MicroStrategyLibrary/api"
username = "your_username"
password = "your_password"

conn = Connection(base_url, username, password, ssl_verify=False)

# Get all projects on the server
projects = Project.list_projects(connection=conn)

# List to store data for DataFrame
data = []

# Function to get all types of tables for a given project
def get_all_tables_for_project(connection, project_id, project_name):
    print(f"Processing Project: {project_name} (ID: {project_id})")
    
    # Get a list of table prefixes
    table_prefixes = list_tables_prefixes(connection=connection)
    for prefix in table_prefixes:
        data.append([project_name, 'Table Prefix', prefix])

    # Get a list of physical tables
    physical_tables = list_physical_tables(connection=connection, project_id=project_id)
    for table in physical_tables:
        data.append([project_name, 'Physical Table', table.name])

    # Get a list of logical tables
    logical_tables = list_logical_tables(connection=connection)
    for table in logical_tables:
        data.append([project_name, 'Logical Table', table.name])

    # List connected datasource instances
    connected_datasource_instances = list_connected_datasource_instances(connection=connection)
    for datasource in connected_datasource_instances:
        data.append([project_name, 'Datasource Instance', datasource.name])

    # List of all available Warehouse Tables
    all_warehouse_tables = list_warehouse_tables(connection=connection)
    for table in all_warehouse_tables:
        data.append([project_name, 'Warehouse Table', table.name])

    # List logical tables based on physical tables of type normal
    normal_tables = list_logical_tables(connection=connection, table_type=PhysicalTableType.NORMAL)
    for table in normal_tables:
        data.append([project_name, 'Normal Logical Table', table.name])

    # List logical tables based on physical tables of type SQL
    sql_tables = list_logical_tables(connection=connection, table_type=PhysicalTableType.SQL)
    for table in sql_tables:
        data.append([project_name, 'SQL Logical Table', table.name])

    # List logical tables based on physical tables of type warehouse_partition
    warehouse_partition_tables = list_logical_tables(connection=connection, table_type=PhysicalTableType.WAREHOUSE_PARTITION)
    for table in warehouse_partition_tables:
        data.append([project_name, 'Warehouse Partition Logical Table', table.name])

# Iterate through each project and get all types of tables
for project in projects:
    get_all_tables_for_project(conn, project.id, project.name)

# Create a DataFrame from the data
df = pd.DataFrame(data, columns=['Project Name', 'Table Type', 'Table Name'])

# Export the DataFrame to an Excel file
output_file = 'mstr_projects_tables.xlsx'
df.to_excel(output_file, index=False)

print(f"Exported table details to {output_file}")