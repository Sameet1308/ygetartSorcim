# Main script

object_dependants = []
deps_completed_all = []

for project in selected_projects:
    pid = project[0]
    print(pid, project[1])
    conn.select_project(project_id=pid)

    reports_list = list_reports(connection=conn, project_id=pid)
    print(f"\nNumber of reports found: {len(reports_list)}\nGetting components of each report now")    

    for i, r in enumerate(reports_list[:]):
        print(f"{i}/{len(reports_list)} --- {r.name} --- {r.id}")
        object_dependants.extend(get_object_deps(r, pid))
    
    print("All report objects components:", len(object_dependants), "\n\n")
    
    # Let's split what is already done from objects to resolve
    deps_finished = []  # already identified dependencies down to Report Objects
    deps_to_resolve = []  # dynamic list of objects to resolve (check deps)
    for d in object_dependants:
        if d[4] in [4, 7, 12, 13, 1]:  # Assuming these are the types you are interested in
            deps_finished.append(d)
        else:
            deps_to_resolve.append(d)
    print("Reports RO dependencies identified:", len(deps_finished))
    print("Objects to be resolved:", len(deps_to_resolve))
    print("\nResolving dependencies of remaining objects now")    
    
    deps_finished = resolve_down(conn, pid, object_dependants, deps_to_resolve, deps_finished)
    deps_completed_all.extend(deps_finished)
    print("Job finished for Project:", pid, project[1], "\n\n")

print("All projects finished.")