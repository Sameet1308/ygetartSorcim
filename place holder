import requests
import pandas as pd

# Server details
base_url = 'http://your-microstrategy-server.com/MicroStrategyLibrary/api'
username = 'your_username'
password = 'your_password'

# Headers
headers = {
    'Content-Type': 'application/json',
    'Accept': 'application/json'
}

def authenticate(base_url, username, password):
    """Authenticate with the MSTR server and return the authToken and cookies."""
    auth_endpoint = f"{base_url}/auth/login"
    auth_payload = {"username": username, "password": password}
    response = requests.post(auth_endpoint, json=auth_payload, headers=headers, verify=False)
    
    if response.status_code == 200 and 'X-MSTR-AuthToken' in response.headers:
        authToken = response.headers['X-MSTR-AuthToken']
        cookies = response.cookies
        return authToken, cookies
    else:
        raise Exception(f"Authentication failed with status code {response.status_code}: {response.text}")

# Main script
try:
    authToken, cookies = authenticate(base_url, username, password)
    print("Authentication successful!")

    # Fetch projects
    projects_endpoint = f"{base_url}/projects"
    projects_response = requests.get(projects_endpoint, headers={'X-MSTR-AuthToken': authToken}, cookies=cookies, verify=False)
    if projects_response.status_code != 200:
        raise Exception(f"Failed to retrieve projects with status code {projects_response.status_code}: {projects_response.text}")

    # Create DataFrame from projects data
    projects_data = projects_response.json()
    df_projects = pd.DataFrame(projects_data)
    df_projects = df_projects.rename(columns={'id': 'Project ID', 'name': 'Project Name'})
    df_projects['Unique ID'] = pd.RangeIndex(start=1, stop=len(df_projects) + 1, step=1)

    print("Projects DataFrame created successfully:")
    print(df_projects)

except Exception as e:
    print(e)